1. B-Tree, B+Tree, B*Tree

B-Tree: B树 N叉排序树

M阶Btree的几个重要特性：
1. 节点最多含有m颗子树（指针），m-1个关键字（存的数据，空间）（m >= 2）   m-1个框框，m个指针
2. 除根结点和叶子节点外，其他每个节点至少有ceil(m / 2)个子节点，ceil为向上取整。  分裂的时候从中间分开，分成两颗子树，中间的数上移
3. 若根结点不是叶子节点，则至少有两颗子树

BTree有一个非常重要的操作：当一个树不满足以上性质的时候会干嘛？红黑树会1.变色，2.左旋，3.右旋
分裂（B-Tree）！


B+Tree  适合大数据的磁盘索引。经典的MySql， 所有数据都在叶子节点上，其他都是索引。增加系统的稳定性，遍历和查找效率
分裂时把最大的数（或者最小的数）放上去
1. 叶子节点连起来了
2. 非叶子节点不存数据 
3. 数据和节点一样多

BTree vs，B+Tree
不同：关键字和Key值，数据存储的地方，双向链表

M阶：这个是由磁盘的页面大小决定，磁盘块和页内存都是16KB，我们的节点数也就是我们的M值，应该要尽可能的跟他一样。这样的好处就是为了我们一次刚好能全部拿出一个节点里面存的所有数据

MySql索引
基于B+Tree
最左原则

建了索引就不会扫描全表